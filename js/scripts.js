$(document).ready(function(){"use strict";!function(){var t=$("#formReg");0!==t.length&&($.validator.addMethod("valueNotEquals",function(t,e,r){return r!==t},"Value must not equal arg."),t.validate({rules:{name:{required:!0,minlength:3,maxlength:60},secondname:{required:!0,minlength:3,maxlength:60},email:{required:!0,email:!0},pass:{required:!0,minlength:6,maxlength:16},gender:{valueNotEquals:"default"}},messages:{name:{required:"Username is required.",minlength:"Username should contain min 4 letters.",maxlength:"Username should contain max 60 letters."},secondname:{required:"Secondname is required.",minlength:"Secondname should contain min 4 letters.",maxlength:"Secondname should contain max 60 letters."},email:{required:"Email is required.",email:"Email is not valid."},pass:{required:"Password is required.",minlength:"Password should contain min 6 letters.",maxlength:"Password should contain max 16 letters."},gender:{valueNotEquals:"Gender is required."}},submitHandler:function(e){var r=t,s=new FormData(t[0]);$.ajax({url:"http://codeit.pro/frontTestTask/user/registration",data:s,contentType:!1,processData:!1,datatype:"html",success:function(t){r[0].reset(),"Error"==t.status?alert(t.message):"Form Error"==t.status?alert(t.message):"User created"==t.message&&"OK"==t.status&&(window.location.href="company.php")},error:function(t){var e=t.statusText;"error"!=e?alert("Ошибка: "+e):alert("Неизвестная ошибка.")}})}}))}(),function(){function t(t){for(var e,r,s,a,n="",o="",i=(t=t.list).length-1;i>=0;i--)r=(e=new Date(1e3*t[i].date)).getDate(),s=e.getMonth(),a=t[i].description,String(r).length<2&&(r="0"+e.getDate()),String(s).length<2&&(s="0"+e.getMonth()),n=r+"."+s+"."+e.getFullYear(),a.length>200&&((a=(a=a.substr(0,200)).split(" ")).splice(a.length-1,1),a=a.join(" "),a+="..."),o+='<div><div class="article"><div class="article__top-block"><div class="img"><img src="'+t[i].img+'" alt="'+t[i].author+'"></div><div class="text"><h4><a href="https://'+t[i].link+'">'+t[i].author+"(title)</a></h4><p>"+a+'</p></div></div><div class="article__bottom-block"><p><b>Author:</b> '+t[i].author+"</p><p><b>Public:</b> "+n+"</p></div></div></div>";$("#owl-slider").prepend(o),$(".owl-carousel").owlCarousel({items:1,margin:30,nav:!1,loop:!0,dots:!0})}function e(t){function e(t,e,s){for(var a=[],n=(t=r(e,s)).length-1;n>=0;n--)a+='<li><div class="value"><p>'+t[n].value+'</p></div><div class="name"><p>'+t[n].name+"</p></div></li>";return $("#partners-list").prepend(a),a}function r(t,e){return"DESC"==t?(p=1,u=-1):(p=-1,u=1),"percentage-sort"==e?l.sort(function(t,e){return t.value>e.value?p:t.value<e.value?u:void 0}):"name-sort"==e&&l.sort(function(t,e){return t.name>e.name?p:t.name<e.name?u:void 0}),l}$(".preloader").remove();var s=$("#companyList");$("#totalCompanies").prepend('<div class="circleCompany"><p> '+t.list.length+" </p></div>  "),s.append("<ul></ul>");for(h=t.list.length-1;h>=0;h--)s.children("ul").prepend('<li><a href="#" class="company" data-company="'+h+'">'+t.list[h].name+"</a></li>");var a,n,o,i,l,d,c,p,u;$(".company").on("click",function(r){if(r.preventDefault(),a=$(this).parents(".item"),i=$(this).data("company"),l=t.list[i].partners,n=$("#partners"),o=$("#partners-list"),$(this).hasClass("active"))return $(this).removeClass("active"),o.empty(),void n.hide();if(!n.length){a.after('<div id="partners"><div class="list-outer"><div class="topBlock"><h3>Company partners</h3><div class="sorting"><p><b>Sort by:</b> <a href="#" id="nameSort" class="sorting-btn">Name</a> <a href="#" id="percentageSort" class="sorting-btn sorted descsort" sorting="DESC">Percentage</a></p></div></div><div class="list-wrap"><ul id="partners-list"></ul></div></div></div>')}$(".company").removeClass("active"),$(this).addClass("active"),n.show(),o.children("li").length&&(o.empty(),n.show()),d=$("#partners .sorted").attr("sorting"),c=$("#partners .sorted").attr("id");var s;e(l,d,c),$("#percentageSort").off("click"),$("#percentageSort").on("click",function(t){t.preventDefault(),c="percentage-sort",s=$(this).attr("sorting"),$("#partners-list").empty(),$("#nameSort").removeAttr("sorting").removeClass("sorted descsort ascsort"),"DESC"==s?(d="ASC",$(this).attr("sorting","ASC"),$(this).removeClass("descsort").addClass("ascsort sorted")):void 0!=s||$(this).hasClass("sorted")?(d="DESC",$(this).attr("sorting","DESC"),$(this).removeClass("ascsort").addClass("descsort sorted")):(d="DESC",$(this).attr("sorting","DESC").addClass("descsort sorted")),e(l,d,c)}),$("#nameSort").off("click"),$("#nameSort").on("click",function(t){t.preventDefault(),c="name-sort",s=$(this).attr("sorting"),$("#partners-list").empty(),$("#percentageSort").removeAttr("sorting").removeClass("sorted descsort ascsort"),"DESC"==s?(d="ASC",$(this).attr("sorting","ASC"),$(this).removeClass("descsort").addClass("ascsort sorted")):void 0!=s||$(this).hasClass("sorted")?(d="DESC",$(this).attr("sorting","DESC"),$(this).removeClass("ascsort").addClass("descsort sorted")):(d="DESC",$(this).attr("sorting","DESC").addClass("descsort sorted")),e(l,d,c)})});for(var m={},h=t.list.length-1;h>=0;h--)void 0!=m[t.list[h].location.name]?m[t.list[h].location.name]++:m[t.list[h].location.name]=1;var v=[],g=[];for(var f in m)v.push(100*m[f]/t.list.length),g.push(f);!function(t,e){for(var r=$("#myChart"),s=[],a=t.length-1;a>=0;a--)s.push(function(){var t=Math.floor(256*Math.random()),e=Math.floor(256*Math.random()),r=Math.floor(256*Math.random());return Math.random(),"rgba("+t+", "+e+", "+r+", 1)"}());new Chart(r,{type:"pie",data:{datasets:[{data:t,backgroundColor:s}],labels:e},options:{layout:{padding:{left:0,right:0,top:25,bottom:0}},tooltips:{intersect:!0,enabled:!0,displayColors:!0,bodyFontColor:"#fff"},legend:{display:!1},title:{}}})}(v,g)}if(0!==$("#companiesWrap").length){var r='<div class="preloader"><img src="img/preloader.gif" alt="" /></div>';$.ajax({url:"http://codeit.pro/frontTestTask/company/getList",contentType:!1,processData:!1,datatype:"html",beforeSend:function(){$(".companyContent").prepend(r)},success:function(t){"OK"==t.status&&e(t)},error:function(t){var e=t.statusText;"error"!=e?alert("Ошибка: "+e):alert("Неизвестная ошибка.")}}),$.ajax({url:"http://codeit.pro/frontTestTask/news/getList",contentType:!1,processData:!1,datatype:"html",beforeSend:function(){$("#news").prepend(r)},success:function(e){"OK"==e.status&&t(e)},error:function(t){var e=t.statusText;"error"!=e?alert("Ошибка: "+e):alert("Неизвестная ошибка.")}})}}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
